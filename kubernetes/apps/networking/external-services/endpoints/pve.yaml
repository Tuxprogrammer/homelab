---
apiVersion: v1
kind: Service
metadata:
  name: &app proxmox-virtualization-env
  namespace: networking
  labels:
    app.kubernetes.io/name: *app
    app.kubernetes.io/instance: *app
spec:
  type: ExternalName
  externalName: pve.${SECRET_DOMAIN_2}
  ports:
    - name: http
      port: &port 443
      protocol: TCP
      targetPort: *port
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: &app proxmox-virtualization-env
  namespace: networking
  annotations:
    nginx.ingress.kubernetes.io/upstream-vhost: "pve.${SECRET_DOMAIN_2}"
    nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
    external-dns.alpha.kubernetes.io/target: "ipv4.${SECRET_DOMAIN}"
    nginx.ingress.kubernetes.io/auth-url: http://ak-outpost-authentik-embedded-outpost.networking.svc.cluster.local:9000/outpost.goauthentik.io/auth/nginx
    nginx.ingress.kubernetes.io/auth-signin: https://auth.${SECRET_DOMAIN}/outpost.goauthentik.io/start?rd=$scheme://$http_host$escaped_request_uri
    nginx.ingress.kubernetes.io/auth-response-headers: |-
      Set-Cookie,X-authentik-username,X-authentik-groups,X-authentik-entitlements,X-authentik-email,X-authentik-name,X-authentik-uid
    nginx.ingress.kubernetes.io/auth-snippet: |
      proxy_set_header X-Forwarded-Host $http_host;
    # This is managed by the gethomepage.dev deployment
    gethomepage.dev/enabled: "false"
  labels:
    app.kubernetes.io/name: *app
    app.kubernetes.io/instance: *app
spec:
  ingressClassName: nginx
  rules:
    - host: &host pve.${SECRET_DOMAIN}
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: *app
                port:
                  number: 443
  tls:
    - hosts:
        - *host
