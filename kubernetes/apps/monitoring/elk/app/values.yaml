---
# Copyright VMware, Inc.
# SPDX-License-Identifier: APACHE-2.0

## @section Global parameters
## Global Docker image parameters
## Please, note that this will override the image parameters, including dependencies, configured to use the global value
## Current available global Docker image parameters: imageRegistry, imagePullSecrets and storageClass

## @param global.imageRegistry Global Docker image registry
## @param global.imagePullSecrets Global Docker registry secret names as an array
## @param global.storageClass Global StorageClass for Persistent Volume(s)
## @param global.elasticsearch.service.name Elasticsearch service name to be used in the Kibana subchart (ignored if kibanaEnabled=false)
## @param global.elasticsearch.service.ports.restAPI Elasticsearch service restAPI port to be used in the Kibana subchart (ignored if kibanaEnabled=false)
## @param global.kibanaEnabled Whether or not to enable Kibana
##
global:
  ## E.g.
  ## imagePullSecrets:
  ##   - myRegistryKeySecretName
  ##
  storageClass: local-path
  kibanaEnabled: true

## @section Elasticsearch cluster Parameters

## Bitnami Elasticsearch image
## @param image.registry Elasticsearch image registry
## @param image.repository Elasticsearch image repository
## @param image.tag Elasticsearch image tag (immutable tags are recommended)
## @param image.digest Elasticsearch image digest in the way sha256:aa.... Please note this parameter, if set, will override the tag
## @param image.pullPolicy Elasticsearch image pull policy
## @param image.pullSecrets Elasticsearch image pull secrets
## @param image.debug Enable Elasticsearch image debug mode
##
image:
  registry: harbor.${SECRET_DOMAIN_2}
  repository: bitnami/elasticsearch
  tag: 8.10.0-mod2
  ## Specify a imagePullPolicy
  ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
  ## ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
  ##
  pullPolicy: Always

## X-Pack security parameters
## Note: TLS configuration is required in order to configure password authentication
##
security:
  ## @param security.enabled Enable X-Pack Security settings
  ##
  enabled: true
  ## @param security.existingSecret Name of the existing secret containing the Elasticsearch password and
  ##
  existingSecret: "elk-secrets"
  ## TLS configuration
  ##
  tls:
    ## @param security.tls.restEncryption Enable SSL/TLS encryption for Elasticsearch REST API.
    ##
    restEncryption: true
    ## @param security.tls.usePemCerts Use this variable if your secrets contain PEM certificates instead of JKS/PKCS12
    ## Ignored when using autoGenerated certs.
    ##
    usePemCerts: true
    ## @param security.tls.master.existingSecret Existing secret containing the certificates for the master nodes
    ## @param security.tls.data.existingSecret Existing secret containing the certificates for the data nodes
    ## @param security.tls.ingest.existingSecret Existing secret containing the certificates for the ingest nodes
    ## @param security.tls.coordinating.existingSecret Existing secret containing the certificates for the coordinating nodes
    ##
    master:
      existingSecret: "elk-elasticsearch-master-tls"
    data:
      existingSecret: "elk-elasticsearch-data-tls"
    ingest:
      existingSecret: "elk-elasticsearch-ingest-tls"
    coordinating:
      existingSecret: "elk-elasticsearch-coordinating-tls"
    ## @param security.tls.verificationMode Verification mode for SSL communications.
    ## Supported values: full, certificate, none.
    ## Ref: https://www.elastic.co/guide/en/elasticsearch/reference/current/security-settings.html
    ##
    verificationMode: "full"

## @section Traffic Exposure Parameters
##

## Elasticsearch ingress parameters
## ref: http://kubernetes.io/docs/user-guide/ingress/
##
ingress:
  ## @param ingress.enabled Enable ingress record generation for Elasticsearch
  ##
  enabled: true
  ## @param ingress.hostname Default host for the ingress record
  ##
  hostname: &host elasticsearch.${SECRET_DOMAIN_2}
  ## @param ingress.path Default path for the ingress record
  ## NOTE: You may need to set this to '/*' in order to use this with ALB ingress controllers
  ##
  path: /
  ## @param ingress.annotations Additional annotations for the Ingress resource. To enable certificate autogeneration, place here your cert-manager annotations.
  ## For a full list of possible ingress annotations, please see
  ## ref: https://github.com/kubernetes/ingress-nginx/blob/master/docs/user-guide/nginx-configuration/annotations.md
  ## Use this parameter to set the required annotations for cert-manager, see
  ## ref: https://cert-manager.io/docs/usage/ingress/#supported-annotations
  ##
  ## e.g:
  ## annotations:
  ##   kubernetes.io/ingress.class: nginx
  ##   cert-manager.io/cluster-issuer: cluster-issuer-name
  ##
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-production
    nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"

  ## @param ingress.tls Enable TLS configuration for the host defined at `ingress.hostname` parameter
  ## TLS certificates will be retrieved from a TLS secret with name: `{{- printf "%s-tls" .Values.ingress.hostname }}`
  ## You can:
  ##   - Use the `ingress.secrets` parameter to create this TLS secret
  ##   - Rely on cert-manager to create it by setting the corresponding annotations
  ##   - Rely on Helm to create self-signed certificates by setting `ingress.selfSigned=true`
  ##
  tls: true

  ## @param ingress.extraHosts An array with additional hostname(s) to be covered with the ingress record
  ## e.g:
  ## extraHosts:
  ##   - name: elasticsearch.local
  ##     path: /
  ##
  extraHosts:
    - name: *host
      path: /

## @section Master-elegible nodes parameters

master:
  ## Elasticsearch resource requests and limits
  ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
  ## We usually recommend not to specify default resources and to leave this as a conscious
  ## choice for the user. This also increases chances charts run on environments with little
  ## resources, such as Minikube. If you do want to specify resources, uncomment the following
  ## lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  ## @param master.resources.limits The resources limits for elasticsearch containers
  ## @param master.resources.requests The requested resources for elasticsearch containers
  ##
  resources:
    limits:
      cpu: 2000m
      memory: 20Gi
    requests:
      cpu: 250m
      memory: 2048Mi
  ## @param master.heapSize Elasticsearch master-eligible node heap size.
  ## Note: The recommended heapSize is half of the container's memory.
  ## If omitted, it will be automatically set.
  ## Example:
  ##   heapSize: 128m
  ##
  heapSize: 1024m

  persistence:
    ## @param master.persistence.enabled Enable persistence using a `PersistentVolumeClaim`
    ##
    enabled: true
    ## @param master.persistence.storageClass Persistent Volume Storage Class
    ## If defined, storageClassName: <storageClass>
    ## If set to "-", storageClassName: "", which disables dynamic provisioning
    ## If undefined (the default) or set to null, no storageClassName spec is
    ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
    ##   GKE, AWS & OpenStack)
    ##
    storageClass: local-path
    ## @param master.persistence.size Persistent Volume Size
    ##
    size: 20Gi

## @section Data-only nodes parameters

data:
  ## Elasticsearch resource requests and limits
  ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
  ## @param data.resources.limits The resources limits for the data containers
  ## @param data.resources.requests [object] The requested resources for the data containers
  ##
  resources:
    limits: {}
    requests:
      cpu: 25m
      memory: 2048Mi
  ## @param data.heapSize Elasticsearch data node heap size.
  ## Note: The recommended heapSize is half of the container's memory.
  ## If omitted, it will be automatically set.
  ## Example:
  ##   heapSize: 128m
  ##
  heapSize: 1024m

  ## Enable persistence using Persistent Volume Claims
  ## ref: https://kubernetes.io/docs/user-guide/persistent-volumes/
  ##
  persistence:
    ## @param data.persistence.enabled Enable persistence using a `PersistentVolumeClaim`
    ##
    enabled: true
    ## @param data.persistence.storageClass Persistent Volume Storage Class
    ## If defined, storageClassName: <storageClass>
    ## If set to "-", storageClassName: "", which disables dynamic provisioning
    ## If undefined (the default) or set to null, no storageClassName spec is
    ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
    ##   GKE, AWS & OpenStack)
    ##
    storageClass: local-path
    ## @param data.persistence.size Persistent Volume Size
    ##
    size: 20Gi

## @section Coordinating-only nodes parameters

coordinating:
  ## Elasticsearch resource requests and limits
  ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
  ## @param coordinating.resources.limits The resources limits for the coordinating-only containers
  ## @param coordinating.resources.requests [object] The requested resources for the coordinating-only containers
  ##
  resources:
    limits: {}
    requests:
      cpu: 25m
      memory: 2048Mi
  ## @param coordinating.heapSize Elasticsearch coordinating node heap size.
  ## Note: The recommended heapSize is half of the container's memory.
  ## If omitted, it will be automatically set.
  ## Example:
  ##   heapSize: 128m
  ##
  heapSize: 1024m

## @section Ingest-only nodes parameters

ingest:
  ## Elasticsearch resource requests and limits
  ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
  ## @param ingest.resources.limits The resources limits for the ingest-only containers
  ## @param ingest.resources.requests [object] The requested resources for the ingest-only containers
  ##
  resources:
    limits: {}
    requests:
      cpu: 25m
      memory: 2048Mi
  ## @param ingest.heapSize Elasticsearch ingest-only node heap size.
  ## Note: The recommended heapSize is half of the container's memory.
  ## If omitted, it will be automatically set.
  ## Example:
  ##   heapSize: 128m
  ##
  heapSize: 1024m

  ## Elasticsearch Ingest-only Service
  ## Recommended for heavy ingestion, improves performance by sending ingest traffic directly into the ingest nodes.
  ## NOTE: Ingest nodes will only accept index requests with an associated pipeline, any other request won't be rerouted.
  ##
  service:
    ## @param ingest.service.enabled Enable Ingest-only service
    ##
    enabled: true

  ## Elasticsearch Ingest-only ingress parameters
  ## ref: http://kubernetes.io/docs/user-guide/ingress/
  ##
  ingress:
    ## @param ingest.ingress.enabled Enable ingress record generation for Elasticsearch
    ##
    enabled: true
    ## @param ingest.ingress.hostname Default host for the ingress record
    ##
    hostname: &host-ingress elasticsearch-ingest.${SECRET_DOMAIN_2}
    ## @param ingest.ingress.path Default path for the ingress record
    ## NOTE: You may need to set this to '/*' in order to use this with ALB ingress controllers
    ##
    path: /
    ## @param ingress.annotations Additional annotations for the Ingress resource. To enable certificate autogeneration, place here your cert-manager annotations.
    ## For a full list of possible ingress annotations, please see
    ## ref: https://github.com/kubernetes/ingress-nginx/blob/master/docs/user-guide/nginx-configuration/annotations.md
    ## Use this parameter to set the required annotations for cert-manager, see
    ## ref: https://cert-manager.io/docs/usage/ingress/#supported-annotations
    ##
    ## e.g:
    ## annotations:
    ##   kubernetes.io/ingress.class: nginx
    ##   cert-manager.io/cluster-issuer: cluster-issuer-name
    ##
    annotations:
      cert-manager.io/cluster-issuer: letsencrypt-production
      nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"

    ## @param ingest.ingress.tls Enable TLS configuration for the host defined at `ingress.hostname` parameter
    ## TLS certificates will be retrieved from a TLS secret with name: `{{- printf "%s-tls" .Values.ingress.hostname }}`
    ## You can:
    ##   - Use the `ingress.secrets` parameter to create this TLS secret
    ##   - Rely on cert-manager to create it by setting the corresponding annotations
    ##   - Rely on Helm to create self-signed certificates by setting `ingress.selfSigned=true`
    ##
    tls: true
    ## @param ingest.ingress.extraHosts An array with additional hostname(s) to be covered with the ingress record
    ## e.g:
    ## extraHosts:
    ##   - name: elasticsearch.local
    ##     path: /
    ##
    extraHosts:
      - name: elasticsearch-ingress.${SECRET_DOMAIN}
        path: /

## @section Metrics parameters

## Elasticsearch Prometheus exporter configuration
## ref: https://hub.docker.com/r/bitnami/elasticsearch-exporter/tags/
##
metrics:
  ## @param metrics.enabled Enable prometheus exporter
  ##
  enabled: true
  ## @param metrics.args Override default container args (useful when using custom images)
  ##
  args:
    - "--es.uri=https://elk-elasticsearch-ingest:9200/"
  ## Prometheus Operator ServiceMonitor configuration
  ##
  serviceMonitor:
    ## @param metrics.serviceMonitor.enabled Create ServiceMonitor Resource for scraping metrics using PrometheusOperator
    ##
    enabled: true
    ## @param metrics.serviceMonitor.namespace Namespace which Prometheus is running in
    ## e.g:
    ## namespace: monitoring
    ##
    namespace: monitoring

## @section Kibana Parameters

## Bundled Kibana parameters
kibana:
  ## Bitnami Kibana image version
  ## ref: https://hub.docker.com/r/bitnami/kibana/tags/
  ## @param image.registry Kibana image registry
  ## @param image.repository Kibana image repository
  ## @param image.tag Kibana image tag (immutable tags are recommended)
  ## @param image.digest Kibana image digest in the way sha256:aa.... Please note this parameter, if set, will override the tag
  ## @param image.pullPolicy Kibana image pull policy
  ## @param image.pullSecrets Specify docker-registry secret names as an array
  ## @param image.debug Enable %%MAIN_CONTAINER%% image debug mode
  ##
  image:
    registry: docker.io
    repository: bitnami/kibana
    tag: 8.10.0-debian-11-r0
    digest: ""
  ## Configure the ingress resource that allows you to access the
  ## Kibana installation. Set up the URL
  ## ref: https://kubernetes.io/docs/user-guide/ingress/
  ##
  ingress:
    ## @param ingress.enabled Enable ingress controller resource
    ##
    enabled: true
    ## @param ingress.hostname Default host for the ingress resource. If specified as "*" no host rule is configured
    ##
    hostname: &host-kibana kibana.${SECRET_DOMAIN_2}
    ## @param ingress.path The Path to Kibana. You may need to set this to '/*' in order to use this with ALB ingress controllers.
    ##
    path: /
    ## @param ingress.annotations Additional annotations for the Ingress resource. To enable certificate autogeneration, place here your cert-manager annotations.
    ## For a full list of possible ingress annotations, please see
    ## ref: https://github.com/kubernetes/ingress-nginx/blob/master/docs/user-guide/nginx-configuration/annotations.md
    ## Use this parameter to set the required annotations for cert-manager, see
    ## ref: https://cert-manager.io/docs/usage/ingress/#supported-annotations
    ##
    ## e.g:
    ## annotations:
    ##   kubernetes.io/ingress.class: nginx
    ##   cert-manager.io/cluster-issuer: cluster-issuer-name
    ##
    annotations:
      cert-manager.io/cluster-issuer: letsencrypt-production
    ## @param ingress.tls Enable TLS configuration for the hostname defined at ingress.hostname parameter
    ## TLS certificates will be retrieved from a TLS secret with name: {{- printf "%s-tls" .Values.ingress.hostname }}
    ## You can use the ingress.secrets parameter to create this TLS secret or rely on cert-manager to create it
    ##
    tls: true
    ## @param ingest.ingress.extraHosts An array with additional hostname(s) to be covered with the ingress record
    ## e.g:
    ## extraHosts:
    ##   - name: elasticsearch.local
    ##     path: /
    ##
    extraHosts:
      - name: kibana.${SECRET_DOMAIN}
        path: /

  ## @section Elasticsearch parameters
  ##
  elasticsearch:
    security:
      auth:
        ## @param elasticsearch.security.auth.enabled Set to 'true' if Elasticsearch has authentication enabled
        ##
        enabled: true
        ## @param elasticsearch.security.auth.existingSecret Name of the existing secret containing the password for the 'kibana_system' user.
        ##
        existingSecret: "elk-secrets"
        ## @param elasticsearch.security.auth.createSystemUser If enabled, Kibana will use Elasticsearch API to create the 'kibana_system' user at startup.
        ##
        createSystemUser: true
        ## @param elasticsearch.security.auth.elasticsearchPasswordSecret Name of the existing secret containing the password for the 'elastic' user.
        ## Required if createSystemUser=true. The secret must containt the key 'elasticsearch-password'.
        ##
        elasticsearchPasswordSecret: "elk-secrets"
      tls:
        ## @param elasticsearch.security.tls.enabled Set to 'true' if Elasticsearch API uses TLS/SSL (HTTPS)
        ##
        enabled: true
        ## @param elasticsearch.security.tls.verificationMode Verification mode for SSL communications.
        ## Supported values: full, certificate, none.
        ## Ref: https://www.elastic.co/guide/en/kibana/7.x/settings.html#elasticsearch-ssl-verificationmode
        verificationMode: "full"
        ## @param elasticsearch.security.tls.existingSecret Name of the existing secret containing Elasticsearch Truststore or CA certificate. Required unless verificationMode=none
        ##
        existingSecret: "elk-elasticsearch-master-tls"
        ## @param elasticsearch.security.tls.usePemCerts Set to 'true' to use PEM certificates instead of PKCS12.
        ##
        usePemCerts: true
