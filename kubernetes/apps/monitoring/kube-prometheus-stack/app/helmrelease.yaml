---
# yaml-language-server: $schema=https://kubernetes-schemas.devbu.io/helmrelease_v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: kube-prometheus-stack
  namespace: monitoring
spec:
  interval: 15m
  chart:
    spec:
      chart: kube-prometheus-stack
      version: 68.4.4
      sourceRef:
        kind: HelmRepository
        name: prometheus-community
        namespace: flux-system
  maxHistory: 3
  install:
    crds: CreateReplace
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    crds: CreateReplace
    remediation:
      strategy: rollback
      retries: 3
  dependsOn:
    - name: rook-ceph-cluster
      namespace: rook-ceph
  uninstall:
    keepHistory: false
  values:
    cleanPrometheusOperatorObjectNames: true
    alertmanager:
      config:
        global:
          resolve_timeout: 5m
        inhibit_rules:
          - source_matchers:
              - severity = "critical"
            target_matchers:
              - severity = "warning"
            equal: ["alertname", "namespace"]
      ingress:
        enabled: true
        pathType: Prefix
        ingressClassName: nginx
        annotations:
          nginx.ingress.kubernetes.io/whitelist-source-range: |
            10.0.0.0/8,172.16.0.0/12,192.168.0.0/16
          hajimari.io/appName: "Alert Manager"
          hajimari.io/icon: mdi:alert-decagram-outline
        hosts:
          - &host alert-manager.${SECRET_DOMAIN}
        tls:
          - hosts:
              - *host
      alertmanagerSpec:
        replicas: 3
        podAntiAffinity: hard
        storage:
          volumeClaimTemplate:
            spec:
              storageClassName: ceph-block-internal
              resources:
                requests:
                  storage: 1Gi
    grafana:
      enabled: false
      forceDeployDashboards: true
    kube-state-metrics:
      fullnameOverride: kube-state-metrics
      metricLabelsAllowlist:
        - pods=[*]
        - deployments=[*]
        - persistentvolumeclaims=[*]
      prometheus:
        monitor:
          enabled: true
          relabelings:
            - action: replace
              regex: (.*)
              replacement: $1
              sourceLabels: ["__meta_kubernetes_pod_node_name"]
              targetLabel: kubernetes_node
    kubeApiServer:
      serviceMonitor:
        selector:
          component: kube-apiserver
    kubeScheduler:
      service:
        selector:
          component: kube-scheduler
    kubeControllerManager:
      service:
        selector:
          component: cloud-controller-manager
    kubeEtcd:
      service:
        selector:
          component: etcd
    kubeProxy:
      enabled: false
    prometheus:
      ingress:
        enabled: true
        ingressClassName: nginx
        annotations:
          nginx.ingress.kubernetes.io/whitelist-source-range: |
            10.0.0.0/8,172.16.0.0/12,192.168.0.0/16
          hajimari.io/appName: Prometheus
          hajimari.io/icon: simple-icons:prometheus
        pathType: Prefix
        hosts:
          - &host prometheus.${SECRET_DOMAIN}
        tls:
          - hosts:
              - *host
      prometheusSpec:
        podMonitorSelectorNilUsesHelmValues: false
        probeSelectorNilUsesHelmValues: false
        ruleSelectorNilUsesHelmValues: false
        scrapeConfigSelectorNilUsesHelmValues: false
        serviceMonitorSelectorNilUsesHelmValues: false
        enableAdminAPI: true
        walCompression: true
        enableFeatures:
          - memory-snapshot-on-shutdown
        retention: 14d
        retentionSize: 50GB
        resources:
          requests:
            cpu: 100m
          limits:
            memory: 2000Mi
        storageSpec:
          volumeClaimTemplate:
            spec:
              storageClassName: ceph-block-internal
              resources:
                requests:
                  storage: 50Gi
