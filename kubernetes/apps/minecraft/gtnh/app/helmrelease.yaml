---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app gtnh
  namespace: minecraft
spec:
  chart:
    spec:
      chart: app-template
      version: 3.7.2
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  dependsOn:
    - name: rook-ceph-operator
      namespace: rook-ceph
    - name: rook-ceph-cluster
      namespace: rook-ceph
  interval: 15m
  timeout: 15m
  maxHistory: 3
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    controllers:
      *app :
        type: statefulset
        annotations:
          reloader.stakater.com/auto: "true"
          backup.velero.io/backup-volumes-excludes: minecraft-archive0,minecraft-store0
        initContainers:
          load-world:
            image:
              repository: eeacms/rsync
              tag: 2.6@sha256:07244cc157ee915ee4095734cd6b68b33bbb807fe59c19a9cd78aa3a1fa3d972
            command:
              - /bin/sh
              - -c
              - rsync -r -t -v -h -O "/data/World/" "/data/World_ramdisk/"
            securityContext:
              runAsNonRoot: true
              runAsUser: 1000
              runAsGroup: 1000
              fsGroup: 1000
              fsGroupChangePolicy: OnRootMismatch
            resources:
              requests:
                cpu: 100m
                memory: 128Mi
              limits:
                memory: 256Mi
        containers:
          *app :
            image:
              repository: ghcr.io/itzg/minecraft-server
              tag: java21@sha256:6c9dafc9cc03bfd7acc40f875f0bd6a3889c107c3f112d267be8f7591c5a4195
            env:
              TZ: ${TIMEZONE}
              EULA: "TRUE"
              TYPE: CUSTOM
              DISABLE_HEALTHCHECK: "false"
              GENERIC_PACKS: GT_New_Horizons_2.7.3_Server_Java_17-21
              GENERIC_PACKS_SUFFIX: .zip
              GENERIC_PACKS_PREFIX: https://downloads.gtnewhorizons.com/ServerPacks/
              LEVEL: "World_ramdisk"
              MODS: https://edge.forgecdn.net/files/3147/365/DiscordIntegrationUnoffical-mc1.7.10-3.1.1_3.8.3_464.jar,https://github.com/GTNewHorizons/GTNH-Web-Map/releases/download/0.3.38/gtnh-web-map-0.3.38.jar,https://github.com/GTNewHorizons/worldedit-gtnh/releases/download/v0.0.7/worldedit-v0.0.7.jar
              # if this isn't true, then the container tries to download the modpack every run
              SKIP_GENERIC_PACK_UPDATE_CHECK: "true"
              STOP_SERVER_ANNOUNCE_DELAY: 15
              MEMORY: 8G
              # Make sure that this matches what is in your pack's startserver bash file
              JVM_OPTS: -Dfml.readTimeout=180 @java9args.txt
              CUSTOM_JAR_EXEC: -jar lwjgl3ify-forgePatches.jar nogui
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  periodSeconds: 60
                  exec: &mc-health { command: ["mc-health"] }
              readiness: *probes
              startup:
                <<: *probes
                spec:
                  initialDelaySeconds: 60
                  periodSeconds: 1
                  failureThreshold: 300
                  exec: *mc-health
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: false
              capabilities:
                drop:
                  - ALL
            resources:
              requests:
                cpu: 4000m
                memory: 8Gi
              limits:
                memory: 64Gi
          save-world:
            image:
              repository: eeacms/rsync
              tag: 2.6@sha256:07244cc157ee915ee4095734cd6b68b33bbb807fe59c19a9cd78aa3a1fa3d972
            # The break allows kubernetes to terminate the pod while it is sleeping
            command:
              - /bin/sh
              - -c
              - |
                while true
                do
                    rsync -r -t -v -h "/data/World_ramdisk/" "/data/World/"
                    sleep 300 || break
                done
            # This part is critical, as it ensures that the world is saved before the pod is terminated
            lifecycle:
              preStop:
                exec:
                  command:
                    - /bin/sh
                    - -c
                    - rsync -r -t -v -h "/data/World_ramdisk/" "/data/World/"
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities:
                drop:
                  - ALL
            resources:
              requests:
                cpu: 100m
                memory: 128Mi
              limits:
                memory: 256Mi
          code-server:
            image:
              repository: ghcr.io/coder/code-server
              tag: 4.98.0@sha256:49190032f1ab73cdcd0c930b1e961c20110aa1b6004d296c14681eb11c9f49d8
            args: [
              "--auth", "none",
              "--user-data-dir", "/data/.vscode",
              "--extensions-dir", "/data/.vscode",
              "--port", "25595",
              "/data"
            ]
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: false
              capabilities:
                drop:
                  - ALL
            resources:
              requests:
                cpu: 10m
              limits:
                memory: 512Mi
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        fsGroupChangePolicy: OnRootMismatch
        seccompProfile: { type: RuntimeDefault }
    service:
      *app :
        controller: *app
        type: LoadBalancer
        annotations:
          metallb.io/loadBalancerIPs: "${METALLB_GTNH_ADDR}"
        ports:
          java:
            port: 25565
            protocol: TCP
          map:
            port: 8123
          rcon:
            port: 25575
          metrics:
            port: 25585
          code-server:
            port: 25595
          aurora:
            port: 48574
    ingress:
      gtnh-map:
        enabled: true
        className: nginx
        annotations:
          external-dns.alpha.kubernetes.io/target: "ipv4.${SECRET_DOMAIN_2}"
          cert-manager.io/cluster-issuer: letsencrypt-production
          gethomepage.dev/enabled: "true"
          gethomepage.dev/group: Services
          gethomepage.dev/name: GTNH DynMap
          gethomepage.dev/icon: https://www.gtnewhorizons.com/images/gnd-logo.webp
          gethomepage.dev/description: "Gregtech New Horizons DynMap"
        hosts:
          - host: &host "{{ .Release.Name }}-map.${SECRET_DOMAIN_2}"
            paths:
              - path: /
                pathType: Prefix
                service:
                  identifier: *app
                  port: map
        tls:
          - hosts:
              - *host
            secretName: "{{ .Release.Name }}-map-${SECRET_DOMAIN_2/./-}-production-tls"
      code-server:
        className: nginx
        annotations:
          external-dns.alpha.kubernetes.io/target: "ipv4.${SECRET_DOMAIN_2}"
          cert-manager.io/cluster-issuer: letsencrypt-production
          nginx.ingress.kubernetes.io/auth-url: http://ak-outpost-authentik-embedded-outpost.networking.svc.cluster.local:9000/outpost.goauthentik.io/auth/nginx
          nginx.ingress.kubernetes.io/auth-signin: https://auth.${SECRET_DOMAIN}/outpost.goauthentik.io/start?rd=$scheme://$http_host$escaped_request_uri
          nginx.ingress.kubernetes.io/auth-response-headers: |-
            Set-Cookie,X-authentik-username,X-authentik-groups,X-authentik-entitlements,X-authentik-email,X-authentik-name,X-authentik-uid
          nginx.ingress.kubernetes.io/auth-snippet: |
            proxy_set_header X-Forwarded-Host $http_host;
        hosts:
          - host: &host2 gtnh-code.${SECRET_DOMAIN_2}
            paths:
              - path: /
                pathType: Prefix
                service:
                  identifier: *app
                  port: code-server
        tls:
          - hosts:
              - *host2
            secretName: "{{ .Release.Name }}-code-${SECRET_DOMAIN_2/./-}-production-tls"
    persistence:
      data:
        accessMode: ReadWriteOnce
        size: 100Gi
        storageClass: ceph-block-internal-fast
        globalMounts:
          - path: /data
      discordintegration-config:
        type: configMap
        name: gtnh-discordintegration-json
        globalMounts:
          - path: /data/config/Chikachi/discordintegration.json
            subPath: discordintegration.json
            readOnly: true
      world:
        type: emptyDir
        medium: Memory
        sizeLimit: 56Gi
        globalMounts:
          - path: /data/World_ramdisk
      backups:
        existingClaim: minecraft-store0
        globalMounts:
          - path: /backups
            subPath: minecraft/gtnh
    serviceMonitor:
      metrics:
        enabled: true
        serviceName: *app
        endpoints:
          - port: metrics
            scheme: http
            path: /
            interval: 1m
