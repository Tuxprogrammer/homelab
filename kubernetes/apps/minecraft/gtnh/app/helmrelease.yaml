---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app gtnh
  namespace: minecraft
spec:
  chart:
    spec:
      chart: app-template
      version: 3.7.2
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  dependsOn:
    - name: rook-ceph-operator
      namespace: rook-ceph
    - name: rook-ceph-cluster
      namespace: rook-ceph
  interval: 15m
  values:
    controllers:
      *app :
        type: statefulset
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          *app :
            image:
              repository: ghcr.io/itzg/minecraft-server
              tag: java21@sha256:6c9dafc9cc03bfd7acc40f875f0bd6a3889c107c3f112d267be8f7591c5a4195
            env:
              TZ: ${TIMEZONE}
              EULA: "TRUE"
              TYPE: CUSTOM
              GENERIC_PACKS: GT_New_Horizons_2.7.3_Server_Java_17-21
              GENERIC_PACKS_SUFFIX: .zip
              GENERIC_PACKS_PREFIX: https://downloads.gtnewhorizons.com/ServerPacks/
              # if this isn't true, then the container tries to download the modpack every run
              SKIP_GENERIC_PACK_UPDATE_CHECK: "true"
              MEMORY: 8G
              # Make sure that this matches what is in your pack's startserver bash file
              JVM_OPTS: -Dfml.readTimeout=180 @java9args.txt
              CUSTOM_JAR_EXEC: -jar lwjgl3ify-forgePatches.jar nogui
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  periodSeconds: 60
                  exec: &mc-health { command: ["mc-health"] }
              readiness: *probes
              startup:
                <<: *probes
                spec:
                  initialDelaySeconds: 60
                  periodSeconds: 1
                  failureThreshold: 300
                  exec: *mc-health
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: false
              capabilities:
                drop:
                  - ALL
            resources:
              requests:
                cpu: 2000m
                memory: 8Gi
              limits:
                memory: 64Gi
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        fsGroupChangePolicy: OnRootMismatch
        seccompProfile: { type: RuntimeDefault }
    service:
      *app :
        controller: *app
        type: LoadBalancer
        annotations:
          metallb.universe.tf/loadBalancerIPs: "${METALLB_GTNH_ADDR}"
        ports:
          java:
            port: 25565
            protocol: TCP
          map:
            port: &map-port 8123
          rcon:
            port: 25575
          metrics:
            port: 25585
    ingress:
      *app :
        enabled: true
        className: nginx
        annotations:
          external-dns.alpha.kubernetes.io/target: "ipv4.${SECRET_DOMAIN_2}"
          cert-manager.io/cluster-issuer: letsencrypt-production
          gethomepage.dev/enabled: "true"
          gethomepage.dev/group: Services
          gethomepage.dev/name: GTNH DynMap
          gethomepage.dev/icon: https://www.gtnewhorizons.com/images/gnd-logo.webp
          gethomepage.dev/description: "Gregtech New Horizons DynMap"
        hosts:
          - host: &host "{{ .Release.Name }}-map.${SECRET_DOMAIN_2}"
            paths:
              - path: /
                pathType: Prefix
                service:
                  name: *app
                  port: *map-port
        tls:
          - hosts:
              - *host
            secretName: "{{ .Release.Name }}-map-${SECRET_DOMAIN_2/./-}-production-tls"
    persistence:
      data:
        accessMode: ReadWriteOnce
        size: 100Gi
        storageClass: ceph-block-internal-fast
        globalMounts:
          - path: /data
      world:
        type: emptyDir
        medium: Memory
        globalMounts:
          - path: /world_ramdisk
      backups:
        existingClaim: media-store0
        advancedMounts:
          *app :
            *app :
              - path: /backups
                subPath: minecraft/gtnh
    serviceMonitor:
      metrics:
        enabled: true
        serviceName: *app
        endpoints:
          - port: metrics
            scheme: http
            path: /
            interval: 1m
