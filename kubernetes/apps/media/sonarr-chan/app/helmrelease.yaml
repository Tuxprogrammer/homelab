---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: sonarr-chan
  namespace: media
spec:
  chart:
    spec:
      chart: app-template
      version: 3.7.3
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  dependsOn:
    - name: rook-ceph-operator
      namespace: rook-ceph
    - name: rook-ceph-cluster
      namespace: rook-ceph
    - name: qbittorrent
      namespace: media
    - name: sabnzbd
      namespace: media
  interval: 15m
  values:
    controllers:
      &app "sonarr":
        type: statefulset
        pod:
          annotations:
            reloader.stakater.com/auto: "true"
            backup.velero.io/backup-volumes-excludes: media,tmp
        containers:
          *app :
            image:
              repository: ghcr.io/home-operations/sonarr
              tag: 4.0.14.2938@sha256:acd5416ab9c36d017687820a32f09d09a4e25a5754aa5ebeae2e7c63d7609c13
            env:
              LOG_LEVEL: info
              TZ: ${TIMEZONE}
              SONARR__APP__INSTANCENAME: Sonarr-chan
              SONARR__SERVER__PORT: &port 8989
              SONARR__AUTH__METHOD: External
              SONARR__AUTH__REQUIRED: DisabledForLocalAddresses
              SONARR__LOG__DBENABLED: "False"
              SONARR__LOG__LEVEL: info
              SONARR__UPDATE__BRANCH: develop
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /ping
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: false
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities:
                drop:
                  - ALL
            resources:
              requests:
                cpu: 5m
                memory: 350Mi
          exporter:
            image:
              repository: ghcr.io/onedr0p/exportarr
              tag: v2.1.0
            args:
              - sonarr
              - --enable-additional-metrics
            env:
              - name: URL
                value: "http://localhost"
              - name: CONFIG
                value: "/config/config.xml"
              - name: PORT
                value: &metricsPort 9707
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities:
                drop:
                  - ALL
            resources:
              requests:
                cpu: 10m
              limits:
                memory: 128Mi
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        fsGroupChangePolicy: OnRootMismatch
        seccompProfile: { type: RuntimeDefault }
    service:
      *app :
        controller: *app
        ports:
          http:
            port: *port
            primary: true
          metrics:
            port: *metricsPort
    ingress:
      *app :
        enabled: true
        className: nginx
        annotations:
          external-dns.alpha.kubernetes.io/target: "ipv4.${SECRET_DOMAIN}"
          cert-manager.io/cluster-issuer: letsencrypt-production
          nginx.ingress.kubernetes.io/auth-url: http://ak-outpost-authentik-embedded-outpost.networking.svc.cluster.local:9000/outpost.goauthentik.io/auth/nginx
          nginx.ingress.kubernetes.io/auth-signin: https://auth.${SECRET_DOMAIN}/outpost.goauthentik.io/start?rd=$scheme://$http_host$escaped_request_uri
          nginx.ingress.kubernetes.io/auth-response-headers: |-
            Set-Cookie,X-authentik-username,X-authentik-groups,X-authentik-entitlements,X-authentik-email,X-authentik-name,X-authentik-uid
          nginx.ingress.kubernetes.io/auth-snippet: |
            proxy_set_header X-Forwarded-Host $http_host;
          gethomepage.dev/enabled: "true"
          gethomepage.dev/group: "{{ title .Release.Namespace }}"
          gethomepage.dev/name: "{{ title .Release.Name }}"
          gethomepage.dev/icon: *app
          gethomepage.dev/description: "Anime Series Request Management"
          gethomepage.dev/siteMonitor: "http://{{ .Release.Name }}.{{ .Release.Namespace }}.svc.cluster.local:{{ index .Values \"service\" \"sonarr\" \"ports\" \"http\" \"port\" }}"
          gethomepage.dev/widget.type: *app
          gethomepage.dev/widget.url: "http://{{ .Release.Name }}.{{ .Release.Namespace }}.svc.cluster.local:{{ index .Values \"service\" \"sonarr\" \"ports\" \"http\" \"port\" }}"
          gethomepage.dev/widget.key: "{{`{{HOMEPAGE_VAR_SONARR_CHAN_TOKEN}}`}}"
          gethomepage.dev/widget.enableQueue: "true"
        hosts:
          - host: &host "{{ .Release.Name }}.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
                service:
                  name: "{{ .Release.Name }}"
                  port: *port
        tls:
          - hosts:
              - *host
            secretName: "{{ .Release.Name }}-${SECRET_DOMAIN/./-}-production-tls"
    persistence:
      config:
        accessMode: ReadWriteOnce
        size: 10Gi
        storageClass: ceph-block-internal
        advancedMounts:
          *app :
            *app :
              - path: /config
            exporter:
              - path: /config
      media:
        existingClaim: media-archive0
        advancedMounts:
          *app :
            *app :
              - path: /video
                subPath: plex/media/TV
              - path: /deluge
                subPath: plex/deluge
              - path: /qbittorrent
                subPath: plex/qbittorrent
              - path: /nzbget
                subPath: plex/nzbget
      tmp:
        type: emptyDir
        advancedMounts:
          *app :
            *app :
              - path: /tmp
    serviceMonitor:
      metrics:
        enabled: true
        serviceName: *app
        endpoints:
          - port: metrics
            scheme: http
            path: /metrics
            interval: 10m
            scrapeTimeout: 10s
