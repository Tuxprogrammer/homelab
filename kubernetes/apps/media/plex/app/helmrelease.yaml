---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app plex
  namespace: media
spec:
  chart:
    spec:
      chart: app-template
      version: 3.7.2
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  dependsOn:
    - name: rook-ceph-operator
      namespace: rook-ceph
    - name: rook-ceph-cluster
      namespace: rook-ceph
  interval: 15m
  values:
    controllers:
      *app :
        type: statefulset
        annotations:
          reloader.stakater.com/auto: "true"
          backup.velero.io/backup-volumes-excludes: media-archive0,media-store0
        pod:
          nodeSelector:
            intel.feature.node.kubernetes.io/gpu: "true"
        containers:
          *app :
            image:
              repository: ghcr.io/onedr0p/plex
              tag: 1.41.4.9463-630c9f557@sha256:7e169d17670c8f34bcb1f40500747b1b689c1c2ef7b80e604b968b5375e62022
            env:
              TZ: ${TIMEZONE}
              PORT: &port 32400
              PLEX_ADVERTISE_URL: https://plex.${SECRET_DOMAIN},http://plex.${SECRET_DOMAIN}:32400,https://plex.${SECRET_DOMAIN_2},http://plex.${SECRET_DOMAIN_2}:32400,http://${METALLB_PLEX_ADDR}:32400,http://plex.media.svc.cluster.local:32400
              PLEX_PREFERENCE_DLNA: "DlnaEnabled=1"
              PLEX_PREFERENCE_GDM: "GdmEnabled=1"
              PLEX_PREFERENCE_GPU: "HardwareAcceleratedCodecs=1"
            envFrom:
              - secretRef:
                  name: plex-secrets
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /identity
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 30
              readiness: *probes
              startup:
                enabled: false
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities:
                drop:
                  - ALL
            resources:
              requests:
                cpu: 5m
                memory: 350Mi
                gpu.intel.com/i915: 1
              limits:
                gpu.intel.com/i915: 1
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        fsGroupChangePolicy: OnRootMismatch
        seccompProfile: { type: RuntimeDefault }
    service:
      *app :
        controller: *app
        type: LoadBalancer
        annotations:
          metallb.io/loadBalancerIPs: "${METALLB_PLEX_ADDR}"
        ports:
          dlna-udp:
            port: 1900
            protocol: UDP
          avahi-discovery:
            port: 5353
            protocol: UDP
          plex-for-roku:
            port: 8324
            protocol: TCP
          http:
            port: 32400
          gdm-discovery-10:
            port: 32410
            protocol: UDP
          gdm-discovery-12:
            port: 32412
            protocol: UDP
          gdm-discovery-13:
            port: 32413
            protocol: UDP
          gdm-discovery-14:
            port: 32414
            protocol: UDP
          dlna-tcp:
            port: 32469
            protocol: TCP
    ingress:
      *app :
        enabled: true
        className: nginx
        annotations:
          external-dns.alpha.kubernetes.io/target: "ipv4.${SECRET_DOMAIN_2}"
          gethomepage.dev/enabled: "true"
          gethomepage.dev/group: "{{ title .Release.Namespace }}"
          gethomepage.dev/name: "{{ title .Release.Name }}"
          gethomepage.dev/icon: "{{ .Release.Name }}"
          gethomepage.dev/description: "Media Hosting Service"
          gethomepage.dev/siteMonitor: "http://{{ .Release.Name }}.{{ .Release.Namespace }}.svc.cluster.local:{{ index .Values \"service\" .Release.Name \"ports\" \"http\" \"port\" }}"
          gethomepage.dev/widget.type: "{{ .Release.Name }}"
          gethomepage.dev/widget.url: "http://{{ .Release.Name }}.{{ .Release.Namespace }}.svc.cluster.local:{{ index .Values \"service\" .Release.Name \"ports\" \"http\" \"port\" }}"
          gethomepage.dev/widget.key: "{{`{{HOMEPAGE_VAR_PLEX_TOKEN}}`}}"
        hosts:
          - host: &host "{{ .Release.Name }}.${SECRET_DOMAIN_2}"
            paths:
              - path: /
                pathType: Prefix
                service:
                  name: *app
                  port: *port
          - host: &host2 "{{ .Release.Name }}.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
                service:
                  name: *app
                  port: *port
        tls:
          - hosts:
              - *host
              - *host2
            secretName: "{{ .Release.Name }}-${SECRET_DOMAIN_2/./-}-production-tls"
    persistence:
      config:
        accessMode: ReadWriteOnce
        size: 100Gi
        storageClass: ceph-block-internal
        advancedMounts:
          *app :
            *app :
              - path: /config
      transcode:
        type: emptyDir
        sizeLimit: 100Gi
        advancedMounts:
          *app :
            *app :
              - path: /transcode
      media:
        existingClaim: media-archive0
        advancedMounts:
          *app :
            *app :
              - path: /media
                subPath: plex/media
      tmp:
        type: emptyDir
        advancedMounts:
          *app :
            *app :
              - path: /tmp
