---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app overseerr
  namespace: media
spec:
  chart:
    spec:
      chart: app-template
      version: 3.7.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  dependsOn:
    - name: rook-ceph-operator
      namespace: rook-ceph
    - name: rook-ceph-cluster
      namespace: rook-ceph
  interval: 15m
  values:
    controllers:
      *app :
        containers:
          *app :
            image:
              repository: ghcr.io/sct/overseerr
              tag: latest@sha256:714ea6db2bc007a2262d112bef7eec74972eb33d9c72bddb9cbd98b8742de950
            # TODO: FOR TESTING ONLY
            command: ["sleep", "infinity"]
            env:
              LOG_LEVEL: info
              TZ: ${TIMEZONE}
              PORT: &port 5055
            probes:
              liveness: &probes
                enabled: false
                custom: true
                spec:
                  httpGet:
                    path: /api/v1/status
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: false
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities:
                drop:
                  - ALL
            resources:
              requests:
                memory: 350Mi
                cpu: 5m
              limits:
                memory: 500Mi
        defaultPodOptions:
          securityContext:
            runAsNonRoot: true
            runAsUser: 568
            runAsGroup: 568
            fsGroup: 568
            fsGroupChangePolicy: OnRootMismatch
            seccompProfile: { type: RuntimeDefault }
    service:
      *app :
        controller: *app
        ports:
          http:
            port: *port

    ingress:
      *app :
        enabled: true
        className: nginx
        annotations:
          external-dns.alpha.kubernetes.io/target: "ipv4.${SECRET_DOMAIN}"
          gethomepage.dev/enabled: "true"
          gethomepage.dev/group: Media
          gethomepage.dev/name: Overseerr
          gethomepage.dev/icon: overseerr
          gethomepage.dev/description: Media Request Management
          gethomepage.dev/widget.type: overseerr
          gethomepage.dev/widget.url: http://overseerr.media.svc.cluster.local:5055
          gethomepage.dev/widget.key: "{{ `{{ HOMEPAGE_VAR_OVERSEERR_TOKEN }}` }}"
        hosts:
          - host: "overseerr.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
                service:
                  name: *app
                  port: *port

    persistence:
      config:
        accessMode: ReadWriteOnce
        size: 1Gi
        storageClass: ceph-block-internal
        advancedMounts:
          *app :
            *app :
              - path: /app/config
      logs:
        type: emptyDir
        advancedMounts:
          *app :
            *app :
              - path: /app/config/logs
