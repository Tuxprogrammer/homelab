---
# yaml-language-server: $schema=https://kubernetes-schemas.devbu.io/cluster_v1.json
apiVersion: postgresql.cnpg.io/v1
kind: Cluster
metadata:
  name: postgres
  namespace: default
  annotations:
    kyverno.io/ignore: "true"
spec:
  instances: 3
  imageName: ghcr.io/cloudnative-pg/postgresql:14.5
  primaryUpdateStrategy: unsupervised
  storage:
    size: 100Gi
    storageClass: ceph-filesystem-internal
  enableSuperuserAccess: true
  superuserSecret:
    name: cloudnative-pg-secret
  postgresql:
    parameters:
      max_connections: "300"
      shared_buffers: 512MB
  monitoring:
    enablePodMonitor: true
  backup:
    retentionPolicy: 30d
    barmanObjectStore:
      wal:
        compression: bzip2
        maxParallel: 8
      serverName: postgres-0
      destinationPath: s3://pg-backups
      endpointURL: http://rook-ceph-rgw-ceph-objectstore.rook-ceph.svc
      s3Credentials:
        accessKeyId:
          name: pg-backups
          key: AWS_ACCESS_KEY_ID
        secretAccessKey:
          name: pg-backups
          key: AWS_SECRET_ACCESS_KEY
  # Note: externalClusters is needed when recovering from an existing cnpg cluster
  # bootstrap:
  #   recovery:
  #     source: &previous-cluster postgres
  # externalClusters:
  #   - name: *previous-cluster
  #     barmanObjectStore:
  #       wal:
  #         compression: bzip2
  #         maxParallel: 8
  #       destinationPath: s3://pg-backups
  #       endpointURL: http://rook-ceph-rgw-ceph-objectstore.rook-ceph.svc
  #       s3Credentials:
  #         accessKeyId:
  #           name: pg-backups
  #           key: AWS_ACCESS_KEY_ID
  #         secretAccessKey:
  #           name: pg-backups
  #           key: AWS_SECRET_ACCESS_KEY
