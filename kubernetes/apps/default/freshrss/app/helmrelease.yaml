---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: freshrss
  namespace: default
spec:
  interval: 15m
  chart:
    spec:
      # renovate: registryUrl=https://bjw-s.github.io/helm-charts
      chart: app-template
      version: 3.7.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 3
  dependsOn:
    - name: cert-manager
      namespace: cert-manager
    - name: ingress-nginx
      namespace: networking
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  values:
    controllers:
      freshrss:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: freshrss/freshrss
              tag: 1.25.0@sha256:e7897e90c1e0ab4a68cb643ff509dec4e3b85bbe42e2688ed9f95eb190bcb2b1
            env:
              TZ: ${TIMEZONE}
              DOMAIN: https://freshrss.${SECRET_DOMAIN}
              CRON_MIN: "*/15"
              OIDC_ENABLED: "1"
              OIDC_PROVIDER_METADATA_URL: https://auth.${SECRET_DOMAIN}/application/o/freshrss/.well-known/openid-configuration
              OIDC_REMOTE_USER_CLAIM: preferred_username
              OIDC_SCOPES: openid profile
              OIDC_X_FORWARDED_HEADERS: X-Forwarded-Host X-Forwarded-Port X-Forwarded-Proto
            envFrom:
              - secretRef:
                  name: freshrss-secrets
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /
                    port: &port 80
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: false
            resources:
              limits:
                memory: 300Mi
              requests:
                cpu: 10m
                memory: 100Mi
    service:
      app:
        enabled: true
        controller: freshrss
        ports:
          http:
            port: *port

    ingress:
      app:
        className: nginx
        annotations:
          external-dns.home.arpa/enabled: "true"
          gethomepage.dev/enabled: "true"
          gethomepage.dev/name: FreshRSS
          gethomepage.dev/icon: freshrss.png
          gethomepage.dev/description: FreshRSS Feed Aggregator
          gethomepage.dev/group: Updates
          gethomepage.dev/widget.type: freshrss
          gethomepage.dev/widget.url: "http://freshrss.default.svc.cluster.local:80"
          gethomepage.dev/widget.username: "{{HOMEPAGE_VAR_FRESHRSS_USERNAME}}"
          gethomepage.dev/widget.password: "{{HOMEPAGE_VAR_FRESHRSS_PASSWORD}}"
        hosts:
          - host: &host "freshrss.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
                service:
                  name: freshrss
                  port: *port
        tls:
          - hosts:
              - *host
    persistence:
      data:
        enabled: true
        type: persistentVolumeClaim
        accessMode: ReadWriteOnce
        size: 100Mi
        globalMounts:
          - path: /var/www/FreshRSS/data
