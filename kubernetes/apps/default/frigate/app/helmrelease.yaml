---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app frigate
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.7.3
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  dependsOn:
    - name: rook-ceph-cluster
      namespace: rook-ceph
  values:
    controllers:
      *app :
        pod:
          annotations:
            reloader.stakater.com/auto: "true"
            backup.velero.io/backup-volumes-excludes: recordings,cache
          nodeSelector:
            google.feature.node.kubernetes.io/coral: "true"
            intel.feature.node.kubernetes.io/gpu: "true"
        containers:
          *app :
            image:
              repository: ghcr.io/blakeblackshear/frigate
              tag: 0.16.0-beta3@sha256:944dbf199f1cbe99cfedc74b7cd9791daa68a334d4e9f74214a06dde58c1458a
            env:
              TZ: ${TIMEZONE}
            envFrom:
              - secretRef:
                  name: frigate-secrets
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /api/version
                    port: &port 5000
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: false
            securityContext:
              privileged: true
            resources:
              requests:
                cpu: 10m
                memory: 1024Mi
                gpu.intel.com/i915: 1
              limits:
                gpu.intel.com/i915: 1
    service:
      *app :
        controller: *app
        ports:
          http:
            port: *port
          rtsp:
            port: 8554
    ingress:
      *app :
        className: nginx
        annotations:
          external-dns.alpha.kubernetes.io/target: "ipv4.${SECRET_DOMAIN}"
          cert-manager.io/cluster-issuer: letsencrypt-production
          nginx.ingress.kubernetes.io/auth-url: http://ak-outpost-authentik-embedded-outpost.networking.svc.cluster.local:9000/outpost.goauthentik.io/auth/nginx
          nginx.ingress.kubernetes.io/auth-signin: https://auth.${SECRET_DOMAIN}/outpost.goauthentik.io/start?rd=$scheme://$http_host$escaped_request_uri
          nginx.ingress.kubernetes.io/auth-response-headers: |-
            Set-Cookie,X-authentik-username,X-authentik-groups,X-authentik-entitlements,X-authentik-email,X-authentik-name,X-authentik-uid
          nginx.ingress.kubernetes.io/auth-snippet: |
            proxy_set_header X-Forwarded-Host $http_host;
          nginx.org/websocket-services: "frigate"
          nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
          nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
          nginx.ingress.kubernetes.io/proxy-http_version: "1.1"
          nginx.ingress.kubernetes.io/proxy-set-header: |
            Upgrade $http_upgrade
            Connection "Upgrade"
            Sec-WebSocket-Key $http_sec_websocket_key
            Sec-WebSocket-Version $http_sec_websocket_version
            Sec-WebSocket-Protocol $http_sec_websocket_protocol
          gethomepage.dev/enabled: "true"
          gethomepage.dev/name: Frigate
          gethomepage.dev/description: NVR with realtime local object detection for IP cameras
          gethomepage.dev/group: Services
          gethomepage.dev/icon: frigate.png
          gethomepage.dev/href: https://frigate.${SECRET_DOMAIN}
          gethomepage.dev/pod-selector: app.kubernetes.io/name=frigate
        hosts:
          - host: &host "{{ .Release.Name }}.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: *app
                  port: http
        tls:
          - hosts:
              - *host
            secretName: "{{ .Release.Name }}-${SECRET_DOMAIN/./-}-production-tls"
    persistence:
      config-data:
        accessMode: ReadWriteOnce
        size: 10Gi
        storageClass: ceph-block-internal
        globalMounts:
          - path: /data
      config-file:
        type: configMap
        name: frigate-config
        globalMounts:
          - path: /config/config.yml
            subPath: config.yaml
            readOnly: true
      recordings:
        existingClaim: default-archive0
        globalMounts:
          - path: /media/frigate/recordings
            subPath: plex/media/NVR
      cache:
        type: emptyDir
        medium: Memory
        sizeLimit: 4Gi
        globalMounts:
          - path: /dev/shm
