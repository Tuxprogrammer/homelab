---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app home-assistant
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.7.3
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  values:
    controllers:
      *app :
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          *app :
            image:
              repository: ghcr.io/home-operations/home-assistant
              tag: 2025.9.3@sha256:3191141730b5062769f806ea6130c30709b19c8289e77e49c5d28061bbad6e7a
            env:
              TZ: ${TIMEZONE}
            envFrom:
              - secretRef:
                  name: home-assistant-secrets
            securityContext:
              allowPrivilegeEscalation: false
              capabilities:
                add:
                  - NET_ADMIN
                  - NET_RAW
                  - NET_BROADCAST
            resources:
              requests:
                cpu: 10m
          code-server:
            image:
              repository: ghcr.io/coder/code-server
              tag: 4.103.2@sha256:f9ed058d6b1a4aa80846f77902d344bd97e450aec69201a0f8939baf58b18a5f
            args: [
              "--auth", "none",
              "--user-data-dir", "/config/.vscode",
              "--extensions-dir", "/config/.vscode",
              "--port", "12321",
              "/config"
            ]
            resources:
              requests:
                cpu: 10m
    defaultPodOptions:
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      hostNetwork: true
    service:
      *app :
        controller: *app
        ports:
          http:
            port: 8123
          frigate:
            port: 5000
          code-server:
            port: 12321
    ingress:
      *app :
        className: nginx
        annotations:
          external-dns.alpha.kubernetes.io/target: "ipv4.${SECRET_DOMAIN}"
          cert-manager.io/cluster-issuer: letsencrypt-production
          nginx.ingress.kubernetes.io/auth-url: http://ak-outpost-authentik-embedded-outpost.networking.svc.cluster.local:9000/outpost.goauthentik.io/auth/nginx
          nginx.ingress.kubernetes.io/auth-signin: https://auth.${SECRET_DOMAIN}/outpost.goauthentik.io/start?rd=$scheme://$http_host$escaped_request_uri
          nginx.ingress.kubernetes.io/auth-response-headers: |-
            Set-Cookie,X-authentik-username,X-authentik-groups,X-authentik-entitlements,X-authentik-email,X-authentik-name,X-authentik-uid
          nginx.ingress.kubernetes.io/auth-snippet: |
            proxy_set_header X-Forwarded-Host $http_host;
          gethomepage.dev/enabled: "true"
          gethomepage.dev/name: Home Assistant
          gethomepage.dev/description: Home automation platform
          gethomepage.dev/group: Services
          gethomepage.dev/icon: home-assistant.png
          gethomepage.dev/href: https://home-assistant.${SECRET_DOMAIN}
          gethomepage.dev/pod-selector: app.kubernetes.io/name=home-assistant
        hosts:
          - host: &host home-assistant.${SECRET_DOMAIN}
            paths:
              - path: /
                service:
                  identifier: *app
                  port: http
        tls:
          - hosts:
              - *host
            secretName: "{{ .Release.Name }}-${SECRET_DOMAIN/./-}-production-tls"
      code-server:
        className: nginx
        annotations:
          external-dns.alpha.kubernetes.io/target: "ipv4.${SECRET_DOMAIN}"
          cert-manager.io/cluster-issuer: letsencrypt-production
          nginx.ingress.kubernetes.io/auth-url: http://ak-outpost-authentik-embedded-outpost.networking.svc.cluster.local:9000/outpost.goauthentik.io/auth/nginx
          nginx.ingress.kubernetes.io/auth-signin: https://auth.${SECRET_DOMAIN}/outpost.goauthentik.io/start?rd=$scheme://$http_host$escaped_request_uri
          nginx.ingress.kubernetes.io/auth-response-headers: |-
            Set-Cookie,X-authentik-username,X-authentik-groups,X-authentik-entitlements,X-authentik-email,X-authentik-name,X-authentik-uid
          nginx.ingress.kubernetes.io/auth-snippet: |
            proxy_set_header X-Forwarded-Host $http_host;
        hosts:
          - host: &host2 home-assistant-code.${SECRET_DOMAIN}
            paths:
              - path: /
                service:
                  identifier: *app
                  port: code-server
        tls:
          - hosts:
              - *host2
            secretName: "{{ .Release.Name }}-code-${SECRET_DOMAIN/./-}-production-tls"
    persistence:
      config:
        accessMode: ReadWriteOnce
        size: 10Gi
        storageClass: ceph-block-internal
        globalMounts:
          - path: /config
      config-cache:
        accessMode: ReadWriteOnce
        size: 10Gi
        storageClass: ceph-block-internal
        globalMounts:
          - path: /config/.venv
      config-logs:
        type: emptyDir
        globalMounts:
          - path: /config/logs
      config-tts:
        type: emptyDir
        globalMounts:
          - path: /config/tts
      tmp:
        type: emptyDir
        globalMounts:
          - path: /tmp
